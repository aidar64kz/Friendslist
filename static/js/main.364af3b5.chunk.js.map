{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","friends","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredFriends","filter","friend","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gOAiBeA,EAfF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAEzB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,eACzB,gCACA,6BAAKF,IACL,4BAAIC,WCYGK,EAlBE,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACf,OACA,8BACDA,EAAQC,KAAI,SAACC,EAAMC,GACd,OACA,cAAC,EAAD,CAEAR,GAAIK,EAAQG,GAAGR,GACfF,KAAMO,EAAQG,GAAGV,KACjBC,MAAOM,EAAQG,GAAGT,OAHbS,SCMEC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,iBACZC,SAAYH,OCCTI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCgBJC,E,kDAlBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAGxB,OAAIG,KAAKJ,MAAMC,SACJ,0DAEJG,KAAKX,MAAMK,a,GAfCQ,aCuDZC,G,wDA9CX,aAAc,IAAD,8BACT,gBAeJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAfzC,EAAKX,MAAO,CACRlB,QAAS,GACTK,YAAa,IAJR,E,gEASQ,IAAD,OAChByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAS,EAAKX,SAAS,CAACvB,QAASkC,S,+BASjC,IAAD,EAC2BZ,KAAKJ,MAA7BlB,EADH,EACGA,QAASK,EADZ,EACYA,YACX8B,EAAkBnC,EAAQoC,QAAO,SAAAC,GACnC,OAAOA,EAAO5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAE1D,OAAQtC,EAAQwC,OAGR,sBAAK5C,UAAU,KAAf,UACA,oBAAIA,UAAU,SAAd,0BACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,QAASmC,WAP1B,oBAAIvC,UAAU,cAAd,iC,GA5BS4B,cCEHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCIdO,IAASC,OACL,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM5BX,M","file":"static/js/main.364af3b5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\r\n    return (\r\n        <div className='tc bg-washed-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='friend' src={`https://robohash.org/${id}?set=set5`}/>\r\n        <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({friends}) => {\r\n    return (\r\n    <div>{\r\n   friends.map((user, i) => {\r\n        return  (\r\n        <Card \r\n        key={i} \r\n        id={friends[i].id} \r\n        name={friends[i].name} \r\n        email={friends[i].email}\r\n        />\r\n        );\r\n    })\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search friends' \r\n            onChange = {searchChange}\r\n            />\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '700px'}}>\r\n            {props.children}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n    }\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooops. That is not good.</h1>\r\n        } \r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state= {\r\n            friends: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users=> {this.setState({friends: users})});\r\n      \r\n    }\r\n\r\n    onSearchChange = (event)=>{\r\n        this.setState({searchfield: event.target.value})\r\n      \r\n    }\r\n\r\n    render() {\r\n        const { friends, searchfield} = this.state;\r\n        const filteredFriends = friends.filter(friend =>{\r\n            return friend.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !friends.length ?\r\n         <h1 className='tc black f3'>LOADING WEBSITE</h1> :\r\n        (\r\n                <div className='tc'>\r\n                <h1 className='f1 fw7'>Friends List</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                <ErrorBoundry>\r\n                <CardList friends={filteredFriends} />\r\n                </ErrorBoundry>\r\n                </Scroll>\r\n                </div>\r\n                );\r\n\r\n        }\r\n\r\n        \r\n    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \n\n\n\n\n\nReactDOM.render(\n    <App />\n\n  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}